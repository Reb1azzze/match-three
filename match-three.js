import { Game } from "./game.js";
import { Grid } from "./grid.js";

const PRIZES = {
  1: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 500‚ÇΩ",
  2: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 1000‚ÇΩ",
  3: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 1500‚ÇΩ",
  4: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 2000‚ÇΩ",
  5: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 2500‚ÇΩ",
  6: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 3000‚ÇΩ",
  7: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 3500‚ÇΩ",
  8: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 4000‚ÇΩ",
  9: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 4500‚ÇΩ",
  10: "üèÜ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 5000‚ÇΩ ‚Äî —Ç—ã —á–µ–º–ø–∏–æ–Ω!"
};

export class MatchThree {
  wrap = document.querySelector(".wrap");

  constructor(rowsCount, columnsCount, tilesCount) {
    this.game = new Game(rowsCount, columnsCount, tilesCount);
    this.grid = new Grid(this.wrap, this.game.matrix);
    this.wrap.addEventListener("swap", (event) => {
      const firstElementPosition = event.detail.firstElementPosition;
      const secondElementPosition = event.detail.secondElementPosition;
      this.swap(firstElementPosition, secondElementPosition);
    });
  }

  async swap(firstElementPosition, secondElementPosition) {
    const swapStates = this.game.swap(firstElementPosition, secondElementPosition);
    await this.grid.swap(firstElementPosition, secondElementPosition, swapStates);
    this.updateScore();
  }

  updateScore() {
    document.querySelector(".score").innerHTML = this.game.score;
  }

  stopGame() {
    this.isGameOver = true;
    const board = document.querySelector('.wrap');
    if (board) {
      board.style.pointerEvents = 'none';
      board.style.opacity = '0.5';
    }
    const score = this.game.score;
    const level = Math.floor(score / 10);
    const prize = PRIZES[level] || "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑, –∏ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–∏–≥—Ä–∞–µ—à—å!";

    document.getElementById('finalScore').textContent = `–í—ã –Ω–∞–±—Ä–∞–ª–∏ ${score} –æ—á–∫–æ–≤`;
    document.getElementById('finalPrize').textContent = `–í–∞—à –ø—Ä–∏–∑: ${prize}`;

    const endOverlay = document.getElementById('endOverlay');
    endOverlay.style.display = 'flex';

    // –£–±–∏—Ä–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
    // Telegram.WebApp.sendData(JSON.stringify({ score: this.game.score }));
  }
}
